:PROPERTIES:
:header-args:emacs-lisp: :results none :exports code
:END:

#+title: Config

* Aesbetic's Emacs Configuration
This file contains the literate configuration for emacs.
* UI
** System
*** TODO Theme: apply rose-pine for the soho vibes :theme:
Load theme, taking current system APPEARANCE into consideration.
#+BEGIN_SRC emacs-lisp
(defun my/apply-theme (appearance)
  (mapc #'disable-theme custom-enabled-themes)
  (pcase appearance
    ('light (load-theme 'tango t))
    ('dark (load-theme 'doom-lantern t))))
(add-hook 'ns-system-appearance-change-functions #'my/apply-theme)
#+END_SRC
*Note:* I might remove this if it gets dark outside too quick.
*** Fonts
#+BEGIN_SRC emacs-lisp
(when (member "Roboto Mono" (font-family-list))
  ;; (setq doom-font (font-spec :family "Roboto Mono" :height 120))
  (set-face-attribute 'default nil :family "Roboto Mono" :height 108)
  (set-face-attribute 'fixed-pitch nil :family "Roboto Mono"))

(when (member "Source Sans Pro" (font-family-list))
  (set-face-attribute 'variable-pitch nil :family "Source Sans Pro" :height 1.18))
#+END_SRC

** Frame
Remove the title bar because it's unaesthetic.
#+BEGIN_SRC emacs-lisp
(add-to-list 'default-frame-alist '(undecorated-round . t))
#+END_SRC
** Window
** Buffer
Enable relative line numbers because it's a habit from vim
#+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type 'relative)
#+END_SRC
* Org
** Aesthetics
*** Fonts
Set Source Sans Pro as header font and resize headings.
#+BEGIN_SRC emacs-lisp
;; Resize Org headings
(dolist (face '((org-level-1 . 1.35)
                (org-level-2 . 1.3)
                (org-level-3 . 1.2)
                (org-level-4 . 1.1)
                (org-level-5 . 1.1)
                (org-level-6 . 1.1)
                (org-level-7 . 1.1)
                (org-level-8 . 1.1)))
  (set-face-attribute (car face) nil :family "Source Sans Pro" :weight 'bold :height (cdr face)))

;; Make the document title a bit bigger
(set-face-attribute 'org-document-title nil :family "Source Sans Pro" :weight 'bold :height 1.8)
#+END_SRC
** Roam
Make "~/zettelkasten" the org-roam directory
#+BEGIN_SRC emacs-lisp
(setq org-roam-directory "~/zettelkasten")
#+END_SRC
** Latex Previews
#+BEGIN_SRC emacs-lisp

(use-package! org-latex-preview
  :defer
  :config
  ;; Increase preview width
  (plist-put org-latex-preview-appearance-options
             :page-width 1.0)
  (plist-put org-latex-preview-appearance-options
             :scale 2)

  ;; enable consistent equation numbering
  (setq org-latex-preview-numbered t)

  ;; real time previews of latex fagments as you type
  (setq org-latex-preview-live t)
  (setq org-latex-preview-live-debounce 0.25)  ;; reducing delay before preview

  ;; png is faster than svg
  ;; (setq org-latex-preview-process-default 'dvipng)

  ;; reveals source text under the fragment being pointed to
  (add-hook! 'org-mode-hook 'org-latex-preview-auto-mode)
  )
#+END_SRC

* Keybinds
** Navigation
*** Workspace
Bind workspace navigation to be more like t-smart
#+BEGIN_SRC emacs-lisp
(map! :ni "C-t" #'+workspace/switch-to
      :ni [C-tab] #'+workspace/other)
#+END_SRC
*** File
Bind "<leader>ff" to switch to src/header pair replacing the find-file offered by doom. This is okay because "<leader>." does finding files for me.
#+BEGIN_SRC emacs-lisp
(map! :leader :desc "Find other file" "f f" #'ff-find-other-file)
#+END_SRC
*** Window
Bind splits to more intuitive keys
#+BEGIN_SRC emacs-lisp
(map! :leader
      "-" #'evil-window-split
      "w s" nil
      "|" #'evil-window-vsplit
      "w v" nil)
#+END_SRC

Bind window navigation like tmux pane navigation
#+BEGIN_SRC emacs-lisp
(map! :n "C-h" #'evil-window-left
      :n "C-j" #'evil-window-down
      :n "C-k" #'evil-window-up
      :n "C-l" #'evil-window-right)

#+END_SRC
*** Buffer
Switch to last buffer
#+BEGIN_SRC emacs-lisp
(map! :leader
      :desc "Switch to last buffer" "f o" #'evil-switch-to-windows-last-buffer
      "`" nil)
#+END_SRC

Make working with wrapped lines easy
#+BEGIN_SRC emacs-lisp
(map!  :nv "j" #'evil-next-visual-line
       :nv "k" #'evil-previous-visual-line)
#+END_SRC

General buffer navigation
#+BEGIN_SRC emacs-lisp
(map!  :m "H" #'evil-beginning-of-visual-line
       :m "L" #'evil-end-of-visual-line
       :m "0" #'evil-window-top
       :m "$" #'evil-window-bottom)
#+END_SRC
